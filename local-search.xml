<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>『模组开发日记』之枫树正式加入世界</title>
    <link href="/2024/11/10/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-4/"/>
    <url>/2024/11/10/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-4/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="枫树加入世界"><span style="color: cadetblue;">枫树加入世界</span></span></h1><hr><h2 style="color: #b7a0e0"><span id="枫树">枫树</span></h2><p>枫树是该模组独创的一个树种</p><p>经常会与原始桦树林群系接壤生成</p><p>树形高大，在树下还会有枫叶飘落</p><img src="/img/枫树群系.png" srcset="/img/loading_1.gif" lazyload alt="枫树群系"><br><img src="/img/枫树林.png" srcset="/img/loading_1.gif" lazyload alt="枫树群系"><img src="/img/枫树落叶效果.png" srcset="/img/loading_1.gif" lazyload alt="枫树群系"><p>枫叶飘落效果</p><br><h3 style="color: #b7a0e0"><span id="枫树的衍生物品">枫树的衍生物品</span></h3><p>下面是一些枫木类的物品</p><img src="/img/枫树与其制作品.png" srcset="/img/loading_1.gif" lazyload alt="枫树与其制作品"><br><h3 style="color: #b7a0e0"><span id="衍生物品展示">衍生物品展示</span></h3><p>下面是一些展示</p><img src="/img/枫树展示1.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/枫树展示2.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/枫树展示3.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/枫树展示4.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/枫树展示5.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><h3 style="color: #b7a0e0"><span id="郁金樱木船与箱船">郁金樱木船与箱船</span></h3><img src="/img/枫树展示6.png" srcset="/img/loading_1.gif" lazyload alt="郁金樱木船与箱船"><br><p align="center" style="color: hotpink;font-size: 20px"><strong>上面就是有关枫树的一些描述</strong></p><hr><h2 style="color: #b7a0e0"><span id="预告">预告</span></h2>  <p>后面将会开发银杏树</p>  <p>更远大的目标是将原神里的一些植物加到模组里去</p><blockquote>  <p style="color: #bbbbee">“一花一世界，一叶一菩提”</p></blockquote><hr><p>版权所有 © 2024 云梦泽<br>欢迎访问我的个人网站：<a href="https://hgt12.github.io/">https://hgt12.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>模组开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MC</tag>
      
      <tag>技术向</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>『模组开发日记』之郁金樱加入世界</title>
    <link href="/2024/11/04/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-3/"/>
    <url>/2024/11/04/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-3/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="郁金樱加入世界"><span style="color: cadetblue;">郁金樱加入世界</span></span></h1><hr><h2 style="color: #b7a0e0"><span id="郁金樱">郁金樱</span></h2><p>作为樱花树的一个变种</p><p>主要生成在樱花群系，或独立生成在一个郁金樱群系</p><p>有着何樱花树差不多的外形</p><img src="/img/郁金樱的生成.png" srcset="/img/loading_1.gif" lazyload alt="郁金樱的生成"><p>凑近看了还会有与樱花树一样的落叶效果</p><br><h3 style="color: #b7a0e0"><span id="郁金樱的衍生物品">郁金樱的衍生物品</span></h3><p>下面是一些郁金樱类的物品</p><img src="/img/郁金樱与其制作品.png" srcset="/img/loading_1.gif" lazyload alt="郁金樱的衍生物品"><br><h3 style="color: #b7a0e0"><span id="衍生物品展示">衍生物品展示</span></h3><p>下面是一些展示</p><img src="/img/郁金樱展示1.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/郁金樱展示2.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/郁金樱展示3.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/郁金樱展示4.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/郁金樱展示5.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><h3 style="color: #b7a0e0"><span id="郁金樱木船与箱船">郁金樱木船与箱船</span></h3><img src="/img/郁金樱船.png" srcset="/img/loading_1.gif" lazyload alt="郁金樱木船与箱船"><br><p align="center" style="color: hotpink;font-size: 20px"><strong>上面就是有关郁金樱的一些描述</strong></p><hr><h2 style="color: #b7a0e0"><span id="预告">预告</span></h2>  <p>后面将会开发一种枫树，银杏树</p>  <p>更远大的目标是将原神里的一些植物加到模组里去</p><blockquote>  <p style="color: #bbbbee">“一花一世界，一叶一菩提”</p></blockquote><hr><p>版权所有 © 2024 云梦泽<br>欢迎访问我的个人网站：<a href="https://hgt12.github.io/">https://hgt12.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>模组开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MC</tag>
      
      <tag>技术向</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>『模组开发日记』之更好看的金丝楠树</title>
    <link href="/2024/11/01/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-2/"/>
    <url>/2024/11/01/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-2/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="关于金丝楠树的更新"><span style="color: cadetblue;">关于金丝楠树的更新</span></span></h1><hr><h2 style="color: #b7a0e0"><span id="修改">修改</span></h2><h3 style="color: #b7a0e0"><span id="树干与树叶">树干与树叶</span></h3><p>本次修改将金丝楠树干修改成四格方块大小树干，这样看起来不会很突兀了</p><p>并且添加了树杈分枝和更好看的树叶</p><p>还有藤蔓作为装饰</p><p>主要生成还是在雨林群系</p><img src="/img/金丝楠更新.png" srcset="/img/loading_1.gif" lazyload alt="金丝楠树的生成"><br><p>生长在热带雨林里还是挺好看的</p><img src="/img/金丝楠生成.png" srcset="/img/loading_1.gif" lazyload alt="金丝楠"><br><p>除此之外其他物品并未作修改</p><hr><blockquote>  <p style="color: #bbbbee">“一花一世界，一叶一菩提”</p>  </blockquote><hr><p>版权所有 © 2024 云梦泽<br>欢迎访问我的个人网站：<a href="https://hgt12.github.io/">https://hgt12.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>模组开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MC</tag>
      
      <tag>技术向</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>『模组开发日记』之金丝楠树与其衍生物品的加入</title>
    <link href="/2024/10/29/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-1/"/>
    <url>/2024/10/29/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0-1/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="金丝楠树加入世界"><span style="color: cadetblue;">金丝楠树加入世界</span></span></h1><hr><h2 style="color: #b7a0e0"><span id="金丝楠树">金丝楠树</span></h2><p>一种很粗大的树木</p><p>主要生成在雨林群系</p><p>是一种树干为3*3大小的高大乔木</p><img src="/img/金丝楠树的生成.png" srcset="/img/loading_1.gif" lazyload alt="金丝楠树的生成"><p>长得不是很好看，因为树木生成的函数我还没研究好</p><br><h3 style="color: #b7a0e0"><span id="金丝楠树的衍生物品">金丝楠树的衍生物品</span></h3><p>下面是一些金丝楠类的物品</p><img src="/img/金丝楠木与其制作品.png" srcset="/img/loading_1.gif" lazyload alt="金丝楠树的衍生物品"><br><h3 style="color: #b7a0e0"><span id="衍生物品展示">衍生物品展示</span></h3><p>下面是一些展示</p><img src="/img/金丝楠展示1.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/金丝楠展示2.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/金丝楠展示3.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><img src="/img/金丝楠展示4.png" srcset="/img/loading_1.gif" lazyload alt="物品展示"><br><h3 style="color: #b7a0e0"><span id="还有金丝楠木船与箱船哟">还有金丝楠木船与箱船哟</span></h3><img src="/img/金丝楠木船与箱船.png" srcset="/img/loading_1.gif" lazyload alt="金丝楠木船与箱船"><br><p align="center" style="color: hotpink;font-size: 20px"><strong>有关金丝楠木的一些描述就这么多啦</strong></p><hr><h2 style="color: #b7a0e0"><span id="预告">预告</span></h2>  <p>后面将会开发一个樱花树的变种</p>  <p>郁金樱</p><blockquote>  <p style="color: #bbbbee">“风不怜，雨不惜，残荷败叶秋叙凄。云不离，雾不散，细雨清风春忆漫。——云梦泽”</p></blockquote><hr><p>版权所有 © 2024 云梦泽<br>欢迎访问我的个人网站：<a href="https://hgt12.github.io/">https://hgt12.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>模组开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MC</tag>
      
      <tag>技术向</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>『模组开发日记』之暗晶钻套装与工具的加入</title>
    <link href="/2024/10/21/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0/"/>
    <url>/2024/10/21/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%97%A5%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="暗晶钻装备正式加入世界"><span style="color: cadetblue;">暗晶钻装备正式加入世界</span></span></h1><hr><h2 style="color: #b7a0e0"><span id="引言">引言</span></h2>  <p>因为我是模组开发一半才开始着手开发个人博客，</p><p>所有没有从一开始就记录自己的模组开发过程，</p><p>不过从现在开始就可以正式记录啦</p><br><p align="center" style="color: #dd8888">需要提到一点的是暗晶钻的来源</p><h2 style="color: #b7a0e0"><span id="关于暗晶钻">关于暗晶钻</span></h2><br><p>暗晶钻的合成</p><img src="/img/暗晶钻合成.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻的合成"><p>暗晶钻是由一个暗晶碎片加上四个钻石合成的来</p><br><h3 style="color: #b7a0e0"><span id="关于暗晶碎片">关于暗晶碎片</span></h3><br><p>暗晶碎片</p><img src="/img/暗晶碎片.png" srcset="/img/loading_1.gif" lazyload alt="暗晶碎片"><p>暗晶碎片是开采暗晶簇得来，这是在生存中唯一能得到暗晶碎片的方法</p><br><p>暗晶簇</p><img src="/img/暗晶簇.png" srcset="/img/loading_1.gif" lazyload alt="暗晶簇"><h4 style="color: #b7a0e0"><span id="暗晶簇的生成">暗晶簇的生成</span></h4><br><p>在主世界的紫水晶洞中，由于环境的不同，紫水晶簇在生长过程中会发生变质而生成一种奇怪又神秘的褪色水晶簇【暗晶簇】</p><br><p>暗晶簇在水晶洞中的状态</p><img src="/img/暗晶簇生成.png" srcset="/img/loading_1.gif" lazyload alt="暗晶簇在水晶洞中的状态"><p>玩家在探索矿洞过程中如果幸运的话可以在紫水晶洞中发现这种神秘的矿石</p><p>需要知道的是，这种矿物有且只会在紫水晶洞中生成，且它不会像紫水晶那样会在母岩上再重新长出来</p><p style="color: #735c0f">看来是一种很神秘的矿物呢</p><p>通过打破暗晶簇可以得到1-3块暗晶碎片</p><br><hr><p>通过上面的合成就可以得到暗晶钻啦</p><br><h2 style="color: #b7a0e0"><span id="暗晶钻装备">暗晶钻装备</span></h2><h3 style="color: #b7a0e0"><span id="合成">合成</span></h3><p>暗晶钻装备的合成和钻石装备合成一模一样</p><p align="center">如下所示</p><p>暗晶钻头盔的合成</p><img src="/img/暗晶钻头盔.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻头盔的合成"><p>暗晶钻头盔为玩家提供：+3护甲值，+3.5盔甲韧性，+2击退抗性</p><br><p>暗晶钻胸甲的合成</p><img src="/img/暗晶钻胸甲.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻胸甲的合成"><p>暗晶钻头盔为玩家提供：+8护甲值，+3.5盔甲韧性，+2击退抗性</p><br><p>暗晶钻裤腿的合成</p><img src="/img/暗晶钻裤腿.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻裤腿的合成"><p>暗晶钻头盔为玩家提供：+6护甲值，+3.5盔甲韧性，+2击退抗性</p><br><p>暗晶钻靴子的合成</p><img src="/img/暗晶钻靴子.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻靴子的合成"><p>暗晶钻头盔为玩家提供：+3护甲值，+3.5盔甲韧性，+2击退抗性</p><br><p>这样就可以得到暗晶钻四件套了</p><p style="color: #dd8888">集齐四件套穿身上会让玩家每15秒获得6颗心的伤害吸收效果</p><img src="/img/暗晶钻四件套.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻四件套效果"><hr><br><p align="center">下面是工具类用品的合成</p><p>暗晶钻剑的合成</p><img src="/img/暗晶钻剑.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻剑的合成"><p>在使用暗晶钻剑攻击生物时会有吸血效果，一般来说每攻击到一个生物会有吸血效果，为自身增加两点生命值，同时攻击多个生物恢复生命值数则按 2*受攻击生物数 来计算</p><br><p>具体代码实现效果如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DarkCrystalDiamondSwordItem</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SwordItem</span><br>&#123;<br><br>    <span class="hljs-comment">// 增加冷却时间</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> <span class="hljs-variable">lastHealTime</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-comment">// 上次回复生命的时间</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">HEAL_COOLDOWN</span> <span class="hljs-operator">=</span> <span class="hljs-number">2000</span>; <span class="hljs-comment">// 2秒冷却，单位是毫秒</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-variable">enemyHitCount</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-comment">// 记录击中的敌人数量</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">COOLDOWN_TIME</span> <span class="hljs-operator">=</span> <span class="hljs-number">40</span>; <span class="hljs-comment">// 设置物品冷却时间，单位是tick（1秒=20tick）</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DarkCrystalDiamondSwordItem</span><span class="hljs-params">(ToolMaterial toolMaterial, <span class="hljs-type">int</span> attackDamage, <span class="hljs-type">float</span> attackSpeed, Settings settings)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(toolMaterial, attackDamage, attackSpeed, settings);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">postHit</span><span class="hljs-params">(ItemStack stack, LivingEntity target, LivingEntity attacker)</span><br>    &#123;<br>        <span class="hljs-comment">//可以在if语句块里引用PlayerEntity user</span><br>        <span class="hljs-keyword">if</span> (attacker <span class="hljs-keyword">instanceof</span> PlayerEntity user)<br>        &#123;<br>            <span class="hljs-comment">//检查冷却时间</span><br>            <span class="hljs-keyword">if</span> (user.getItemCooldownManager().isCoolingDown(stack.getItem()))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">//如果正在冷却，直接返回</span><br>            &#125;<br><br>            stack.damage(<span class="hljs-number">1</span>, attacker, e -&gt; e.sendEquipmentBreakStatus(EquipmentSlot.MAINHAND));<br>            enemyHitCount++; <span class="hljs-comment">//每次击中敌人时增加计数</span><br><br>            <span class="hljs-type">long</span> <span class="hljs-variable">currentTime</span> <span class="hljs-operator">=</span> System.currentTimeMillis();<br><br>            <span class="hljs-comment">//检查冷却时间</span><br>            <span class="hljs-keyword">if</span> (currentTime - lastHealTime &gt;= HEAL_COOLDOWN)<br>            &#123;<br>                healMultipleFromEnemies(attacker, enemyHitCount);<br>                lastHealTime = currentTime; <span class="hljs-comment">//更新最后一次回复生命的时间</span><br>                enemyHitCount = <span class="hljs-number">0</span>; <span class="hljs-comment">//重置敌人数量计数</span><br>            &#125;<br><br>            <span class="hljs-comment">//设置物品冷却(用物品冷却管理器来设置)</span><br>            user.getItemCooldownManager().set(stack.getItem(), COOLDOWN_TIME);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//用于实现多次攻击回复生命值的逻辑</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">healMultipleFromEnemies</span><span class="hljs-params">(LivingEntity attacker, <span class="hljs-type">int</span> enemyCount)</span><br>    &#123;<br>        <span class="hljs-comment">//每个敌人回复1点生命值</span><br>        <span class="hljs-type">float</span> <span class="hljs-variable">healAmount</span> <span class="hljs-operator">=</span> Math.min(enemyCount * <span class="hljs-number">2</span>, <span class="hljs-number">20</span> - attacker.getHealth()); <span class="hljs-comment">//确保不超过最大生命值</span><br>        attacker.heal(healAmount);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br><p>暗晶钻斧的合成</p><img src="/img/暗晶钻斧.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻斧的合成"><p>暗晶钻斧头每次使用可以砍伐目标木头上方所有的木头，并且在使用斧头攻击生物时会将生物打出重伤效果(冷却时间五秒钟)</p><br><p>具体代码实现效果如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DarkCrystalDiamondAxeItem</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AxeItem</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">COOLDOWN_TIME</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span>; <span class="hljs-comment">//冷却时间，单位是tick（1秒=20tick）</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DarkCrystalDiamondAxeItem</span><span class="hljs-params">(ToolMaterial material, <span class="hljs-type">float</span> attackDamage, <span class="hljs-type">float</span> attackSpeed, Settings settings)</span> &#123;<br>        <span class="hljs-built_in">super</span>(material, attackDamage, attackSpeed, settings);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">postMine</span><span class="hljs-params">(ItemStack stack, World world, BlockState state, BlockPos pos, LivingEntity miner)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (!(miner <span class="hljs-keyword">instanceof</span> PlayerEntity player))<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">//只有玩家可以使用</span><br>        &#125;<br><br>        <span class="hljs-comment">//检查当前方块是否是木头</span><br>        <span class="hljs-keyword">if</span> (state.isIn(BlockTags.OVERWORLD_NATURAL_LOGS))<br>        &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">brokenBlocks</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-comment">//记录破坏的木头块数</span><br>            <span class="hljs-keyword">if</span> (!world.isClient)<br>            &#123;<br>                <span class="hljs-comment">//服务器端处理</span><br>                showWoodInVertical(world, player);<br><br>                <span class="hljs-comment">//打破当前的木头</span><br>                brokenBlocks++;<br>                world.breakBlock(pos, <span class="hljs-literal">true</span>, player);<br>                <span class="hljs-comment">//检查并破坏上方的木头</span><br>                brokenBlocks += checkAndBreakAbove(world, pos.up(), state, player);<br><br>                <span class="hljs-comment">//减少斧头耐久</span><br>                stack.damage(brokenBlocks, player, (p) -&gt; p.sendToolBreakStatus(Hand.MAIN_HAND));<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">//如果不是木头，返回 false</span><br>    &#125;<br><br>    <span class="hljs-comment">//检查并破坏上方的木头</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-title function_">checkAndBreakAbove</span><span class="hljs-params">(World world, BlockPos pos, BlockState originalState, PlayerEntity player)</span><br>    &#123;<br>        <span class="hljs-type">BlockState</span> <span class="hljs-variable">aboveState</span> <span class="hljs-operator">=</span> world.getBlockState(pos);<br><br>        <span class="hljs-comment">//用来计数破坏了多少个方块</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">brokenCount</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">if</span> (aboveState.isIn(BlockTags.OVERWORLD_NATURAL_LOGS) &amp;&amp; aboveState.equals(originalState)) &#123;<br>            <span class="hljs-comment">//破坏上方的木头</span><br>            world.breakBlock(pos, <span class="hljs-literal">true</span>, player);<br>            brokenCount++;<br><br>            <span class="hljs-comment">//递归检查上方的木头</span><br>            brokenCount += checkAndBreakAbove(world, pos.up(), originalState, player);<br>        &#125;<br>        <span class="hljs-keyword">return</span> brokenCount;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">showWoodInVertical</span><span class="hljs-params">(World world, PlayerEntity player)</span><br>    &#123;<br>        <span class="hljs-type">BlockPos</span> <span class="hljs-variable">playerPos</span> <span class="hljs-operator">=</span> player.getBlockPos();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i++)<br>        &#123;<br>            <span class="hljs-type">BlockPos</span> <span class="hljs-variable">checkPos</span> <span class="hljs-operator">=</span> playerPos.up(i);<br>            <span class="hljs-type">BlockState</span> <span class="hljs-variable">blockState</span> <span class="hljs-operator">=</span> world.getBlockState(checkPos); <span class="hljs-comment">//获取当前检查的方块状态</span><br>            <span class="hljs-keyword">if</span> (blockState.isIn(BlockTags.OVERWORLD_NATURAL_LOGS))<br>            &#123;<br>                world.playSound(<span class="hljs-literal">null</span>, checkPos, SoundEvents.BLOCK_WOOD_PLACE, SoundCategory.BLOCKS, <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">postHit</span><span class="hljs-params">(ItemStack stack, LivingEntity target, LivingEntity attacker)</span><br>    &#123;<br>        <span class="hljs-comment">//可以在if语句块里引用PlayerEntity user</span><br>        <span class="hljs-keyword">if</span> (attacker <span class="hljs-keyword">instanceof</span> PlayerEntity user)<br>        &#123;<br>            <span class="hljs-comment">//检查冷却时间</span><br>            <span class="hljs-keyword">if</span> (user.getItemCooldownManager().isCoolingDown(stack.getItem()))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-comment">//扣除斧头耐久</span><br>            stack.damage(<span class="hljs-number">1</span>, attacker, e -&gt; e.sendEquipmentBreakStatus(EquipmentSlot.MAINHAND));<br><br>            <span class="hljs-comment">//用斧头打中人之后会给对方重伤效果</span><br>            target.addStatusEffect(<span class="hljs-keyword">new</span> <span class="hljs-title class_">StatusEffectInstance</span>(ModStatusEffects.BADLY_WOUNDED, <span class="hljs-number">80</span>, <span class="hljs-number">0</span>)); <span class="hljs-comment">// 4秒中重伤</span><br><br>            <span class="hljs-comment">//这是使用后的冷却冷却</span><br>            user.getItemCooldownManager().set(stack.getItem(), COOLDOWN_TIME);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><br><p>暗晶钻镐的合成</p><img src="/img/暗晶钻镐.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻镐的合成"><p>暗晶钻镐使用时右键可以瞬间破坏3*3*3范围内的方块（冷却时间四秒钟）</p><br><p>具体代码实现效果如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DarkCrystalDiamondPickaxeItem</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">MiningToolItem</span><br>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">COOLDOWN_TIME</span> <span class="hljs-operator">=</span> <span class="hljs-number">80</span>; <span class="hljs-comment">//冷却时间，单位是tick（1秒=20tick）</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DarkCrystalDiamondPickaxeItem</span><span class="hljs-params">(ToolMaterial material, <span class="hljs-type">int</span> attackDamage, <span class="hljs-type">float</span> attackSpeed, Item.Settings settings)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(attackDamage, attackSpeed, material, BlockTags.PICKAXE_MINEABLE, settings);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> TypedActionResult&lt;ItemStack&gt; <span class="hljs-title function_">use</span><span class="hljs-params">(World world, PlayerEntity user, Hand hand)</span><br>    &#123;<br>        <span class="hljs-type">ItemStack</span> <span class="hljs-variable">stack</span> <span class="hljs-operator">=</span> user.getStackInHand(hand);<br><br>        <span class="hljs-comment">//检查玩家是否在创造模式（先检查再判断）</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">isCreative</span> <span class="hljs-operator">=</span> user.isCreative();<br><br>        <span class="hljs-comment">//检查冷却状态（如果不在创造模式下）</span><br>        <span class="hljs-keyword">if</span> (!isCreative &amp;&amp; user.getItemCooldownManager().isCoolingDown(stack.getItem()))<br>        &#123;<br>            <span class="hljs-keyword">return</span> TypedActionResult.fail(stack);<br>        &#125;<br><br>        <span class="hljs-comment">//获取玩家当前瞄准的方块</span><br>        <span class="hljs-type">HitResult</span> <span class="hljs-variable">hitResult</span> <span class="hljs-operator">=</span> user.raycast(<span class="hljs-number">5.0</span>, <span class="hljs-number">1.0F</span>, <span class="hljs-literal">false</span>);<br><br>        <span class="hljs-comment">//检查瞄准的方块类型</span><br>        <span class="hljs-keyword">if</span> (hitResult.getType() == HitResult.Type.BLOCK)<br>        &#123;<br>            <span class="hljs-type">BlockHitResult</span> <span class="hljs-variable">blockHitResult</span> <span class="hljs-operator">=</span> (BlockHitResult) hitResult;<br>            <span class="hljs-type">BlockPos</span> <span class="hljs-variable">targetedBlockPos</span> <span class="hljs-operator">=</span> blockHitResult.getBlockPos();<br>            <span class="hljs-type">BlockState</span> <span class="hljs-variable">state</span> <span class="hljs-operator">=</span> world.getBlockState(targetedBlockPos);<br><br>            <span class="hljs-comment">//检查方块是否可以被挖掘</span><br>            <span class="hljs-keyword">if</span> (!state.isAir() &amp;&amp; canMine(state))<br>            &#123;<br>                <span class="hljs-comment">//确保玩家可以破坏瞄准的位置</span><br>                <span class="hljs-keyword">if</span> (user.canModifyAt(world, targetedBlockPos))<br>                &#123;<br>                    <span class="hljs-comment">//挖掘 3x3x3 区域</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>; x &lt;= <span class="hljs-number">1</span>; x++)<br>                    &#123;<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>; y &lt;= <span class="hljs-number">1</span>; y++)<br>                        &#123;<br>                            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">z</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>; z &lt;= <span class="hljs-number">1</span>; z++)<br>                            &#123;<br>                                <span class="hljs-type">BlockPos</span> <span class="hljs-variable">blockToBreak</span> <span class="hljs-operator">=</span> targetedBlockPos.add(x, y, z);<br>                                <span class="hljs-type">BlockState</span> <span class="hljs-variable">blockState</span> <span class="hljs-operator">=</span> world.getBlockState(blockToBreak);<br><br>                                <span class="hljs-comment">// 检查每个方块是否可以被挖掘</span><br>                                <span class="hljs-keyword">if</span> (!blockState.isAir() &amp;&amp; canMine(blockState))<br>                                &#123;<br>                                    <span class="hljs-comment">// 进行方块破坏，设置进度</span><br>                                    world.breakBlock(blockToBreak, <span class="hljs-literal">true</span>, user);<br>                                &#125;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (!isCreative)<br>                    &#123;<br>                        <span class="hljs-comment">//播放音效</span><br>                        world.playSound(<span class="hljs-literal">null</span>, user.getX(), user.getY(), user.getZ(), SoundEvents.ITEM_AXE_STRIP, user.getSoundCategory(), <span class="hljs-number">1.0F</span>, <span class="hljs-number">1.0F</span>);<br><br>                        <span class="hljs-comment">//设置物品冷却（用物品冷却管理器来设置）</span><br>                        user.getItemCooldownManager().set(stack.getItem(), COOLDOWN_TIME);<br><br>                        <span class="hljs-comment">//消耗耐久，假设挖掘了 26 个方块</span><br>                        stack.damage(<span class="hljs-number">26</span>, user, (entity) -&gt; entity.sendToolBreakStatus(hand));<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> TypedActionResult.success(stack);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">canMine</span><span class="hljs-params">(BlockState state)</span><br>    &#123;<br>        <span class="hljs-comment">// 检查方块是否可以被挖掘</span><br>        <span class="hljs-keyword">return</span> state.isIn(BlockTags.PICKAXE_MINEABLE); <span class="hljs-comment">// 请替换为实际可挖掘方块的检查条件</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br><p>暗晶钻锄的合成</p><img src="/img/暗晶钻锄.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻锄的合成"><p>暗晶钻锄使用时可以一次性耕种3*3的农田</p><br><p>具体代码实现效果如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DarkCrystalDiamondHoeItem</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HoeItem</span><br>&#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">DarkCrystalDiamondHoeItem</span><span class="hljs-params">(ToolMaterial material, <span class="hljs-type">int</span> attackDamage, <span class="hljs-type">float</span> attackSpeed, Settings settings)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(material, attackDamage, attackSpeed, settings);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> ActionResult <span class="hljs-title function_">useOnBlock</span><span class="hljs-params">(ItemUsageContext context)</span> &#123;<br>        <span class="hljs-type">BlockPos</span> <span class="hljs-variable">blockPos</span> <span class="hljs-operator">=</span> context.getBlockPos();<br>        <span class="hljs-type">World</span> <span class="hljs-variable">world</span> <span class="hljs-operator">=</span> context.getWorld();<br>        <span class="hljs-type">PlayerEntity</span> <span class="hljs-variable">playerEntity</span> <span class="hljs-operator">=</span> context.getPlayer();<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">startX</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">startZ</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">tillCount</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> startX; x &lt;= <span class="hljs-number">1</span>; x++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">z</span> <span class="hljs-operator">=</span> startZ; z &lt;= <span class="hljs-number">1</span>; z++)<br>            &#123;<br>                <span class="hljs-type">BlockPos</span> <span class="hljs-variable">currentPos</span> <span class="hljs-operator">=</span> blockPos.add(x, <span class="hljs-number">0</span>, z);<br>                <span class="hljs-type">BlockState</span> <span class="hljs-variable">currentState</span> <span class="hljs-operator">=</span> world.getBlockState(currentPos);<br>                Pair&lt;Predicate&lt;ItemUsageContext&gt;, Consumer&lt;ItemUsageContext&gt;&gt; pair = TILLING_ACTIONS.get(currentState.getBlock());<br><br>                <span class="hljs-keyword">if</span> (pair != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    Predicate&lt;ItemUsageContext&gt; predicate = pair.getFirst();<br>                    Consumer&lt;ItemUsageContext&gt; consumer = pair.getSecond();<br><br>                    <span class="hljs-type">BlockHitResult</span> <span class="hljs-variable">hitResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockHitResult</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Vec3d</span>(currentPos.getX(), currentPos.getY(), currentPos.getZ()), Direction.UP, currentPos, <span class="hljs-literal">false</span>);<br>                    <span class="hljs-type">ItemUsageContext</span> <span class="hljs-variable">newContext</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemUsageContext</span>(world,playerEntity, context.getHand(), context.getStack(), hitResult);<br><br>                    <span class="hljs-comment">// 在客户端上执行操作 如果是（!world.isClient）则在服务端执行操作</span><br>                    <span class="hljs-keyword">if</span> (world.isClient)<br>                    &#123;<br>                        <span class="hljs-keyword">if</span> (predicate.test(newContext))<br>                        &#123;<br>                            <span class="hljs-comment">// 播放声音效果</span><br>                            world.playSound(playerEntity, currentPos, SoundEvents.ITEM_HOE_TILL, SoundCategory.BLOCKS, <span class="hljs-number">1.0f</span>, <span class="hljs-number">1.0f</span>);<br>                            consumer.accept(newContext); <span class="hljs-comment">//在客户端添加动作的效果</span><br>                            tillCount++;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span><br>                    &#123;<br>                        <span class="hljs-keyword">if</span> (predicate.test(newContext))<br>                        &#123;<br>                            consumer.accept(newContext);<br>                            tillCount++;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 如果成功耕作的方块数大于 0，处理耐久</span><br>        <span class="hljs-keyword">if</span> (tillCount &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (playerEntity != <span class="hljs-literal">null</span>)<br>            &#123;<br>                context.getStack().damage(<span class="hljs-number">9</span>, playerEntity, p -&gt; p.sendToolBreakStatus(context.getHand()));<br>            &#125;<br>            <span class="hljs-keyword">return</span> ActionResult.success(world.isClient);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> ActionResult.PASS;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><br><p>暗晶钻铲的合成</p><img src="/img/暗晶钻铲.png" srcset="/img/loading_1.gif" lazyload alt="暗晶钻铲的合成"><p>暗晶钻铲暂无特殊功能</p><br><p align="center" style="color: hotpink;font-size: 20px"><strong>以上代码仅供参考，若想摘抄请在下方留言</strong></p><hr><hr><h2 style="color: #b7a0e0"><span id="总结">总结</span></h2>  <p>该套装开发进程已经完成，后续还会更新</p>  <blockquote>  <p style="color: #bbbbee">“一花一世界，一叶一菩提”</p>  </blockquote><hr><p>版权所有 © 2024 云梦泽<br>欢迎访问我的个人网站：<a href="https://hgt12.github.io/">https://hgt12.github.io/</a></p>]]></content>
    
    
    <categories>
      
      <category>模组开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MC</tag>
      
      <tag>技术向</tag>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于怎么将自定义js用hexo注入的方法加到自定义html中的一点理解</title>
    <link href="/2024/10/19/%E5%85%B3%E4%BA%8E%E6%80%8E%E4%B9%88%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89js%E7%94%A8hexo%E6%B3%A8%E5%85%A5%E7%9A%84%E6%96%B9%E6%B3%95%E5%8A%A0%E5%88%B0%E8%87%AA%E5%AE%9A%E4%B9%89html%E4%B8%AD%E7%9A%84a%C2%B8%E4%B8%80%E7%82%B9%E7%90%86%E8%A7%A3/"/>
    <url>/2024/10/19/%E5%85%B3%E4%BA%8E%E6%80%8E%E4%B9%88%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89js%E7%94%A8hexo%E6%B3%A8%E5%85%A5%E7%9A%84%E6%96%B9%E6%B3%95%E5%8A%A0%E5%88%B0%E8%87%AA%E5%AE%9A%E4%B9%89html%E4%B8%AD%E7%9A%84a%C2%B8%E4%B8%80%E7%82%B9%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 align="center"><span id="关于自定义html的相关配置">关于自定义html的相关配置</span></h1><br><h2 style="color: #b7a0e0"><span id="起因">起因</span></h2><p>今天尝试着创建一个自定义的html来搭建一个留言板页面并给这个页面设置特殊的雪花降落效果</p><h2 style="color: #b7a0e0"><span id="发现问题">发现问题</span></h2><p>但我在研究新建html文件和hexo注入的时候遇到无法将自己的js注入到自定义的html文件中的问题</p><img src="/img/hexo注入.png" srcset="/img/loading_1.gif" lazyload alt><h2 style="color: #b7a0e0"><span id="寻找解决方法">寻找解决方法</span></h2><p>找了好久的问题，又去翻阅了官方的API文档</p><p>但还是看的云里雾里的</p><p><strong>我看到他里面给的提示说是</strong></p><hr><p>default: 注入到每个页面（默认值</p><p> home: 只注入到主页（is_home() 为 true 的页面）</p><p> post: 只注入到文章页面（is_post() 为 true 的页面）</p><p> page: 只注入到独立页面（is_page() 为 true 的页面）</p><p> archive: 只注入到归档页面（is_archive() 为 true 的页面）</p><p> category: 只注入到分类页面（is_category() 为 true 的页面）</p><p> tag: 只注入到标签页面（is_tag() 为 true 的页面）</p><p> messages: 只注入到留言板页面（is_messages() 为 true 的页面）<br> 或是其他自定义 layout 名称，例如在Fluid 主题中 about 对应关于页、links 对应友联页</p><p></p><hr><p><strong>结果看完我更蒙了</strong></p><p>然后就是各种找解决方法</p><h2 style="color: #b7a0e0"><span id="出现头绪">出现头绪</span></h2><p>然后我在翻项目文件的时候在.ejs文件里发现了有关layout的代码</p><img src="/img/hexo注入1.png" srcset="/img/loading_1.gif" lazyload alt><img src="/img/hexo注入2.png" srcset="/img/loading_1.gif" lazyload alt><p>上面就是在about.ejs文件中的layout属性是和about页面里的设置是关联的</p><p>然后发现在layout文件夹下的文件是属于是布局文件</p><p><strong>而且有一些布局文件还没有这些属性，原来是有一些布局是不能拥有这个属性的</strong></p><p>我自己的理解是只有一些大的页面才会有这个属性，但小页面不会有，比如一下post文章页面就没有</p><h2 style="color: #b7a0e0"><span id="尝试解决">尝试解决</span></h2><p>知道问题出在那就很好解决了</p><p>先在layout文件夹下新建一个和自己新建的html相关联的.ejs文件（最好是同名的）</p><p>里面的内容可以先复制其他类似的文件来用</p><p><strong>需要注意的是，你复制用的哪些界面的布局，你自己自定义界面的布局也会和他一样</strong></p><img src="/img/hexo注入3.png" srcset="/img/loading_1.gif" lazyload alt><p>我这里就照搬了page.ejs文件</p><p><strong>要注意你上面的layout属于要改成你自己自定义的名称</strong></p><p>然后再到项目目录下新建scripts文件夹用于存放我们的hexo注入代码js文件</p><img src="/img/hexo注入4.png" srcset="/img/loading_1.gif" lazyload alt><p>然后再写一段你要注入到页面的js文件和要关联的layout属性加上去问题就完美解决了</p><img src="/img/hexo注入5.png" srcset="/img/loading_1.gif" lazyload alt><h2 style="color: #b7a0e0"><span id="后记">后记</span></h2><p>我的理解是这玩意在/layout路径下面某些文件（或者你自己新建的文件要自己写ejs）的 page.layout = "about" 里如果文件第一行是about，则下面填about会有js效果则表示注入成功</p><p>要注意的是你新建页面的布局你想自己设计的话要自己去该，源码中的page.ejs是属于默认布局来的了</p><br><p><strong>问题解决终于可以睡个好觉了</strong></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>自定义</tag>
      
      <tag>随笔</tag>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2024/10/17/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/10/17/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>​<strong>关于云梦泽的个人博客开发</strong></p><p>简单介绍一下这个博客建立的初衷吧</p><p>由于我最近在做Minecraft的模组开发，就想着建一个个人博客来记录一下自己的模组开发过程，就当作是朋友圈来发了。</p><p>因为模组的大体框架已经搭好，后续我会更新一下模组开发的过程。</p><p><img src="/img/%E6%A8%A1%E7%BB%84%E5%BC%80%E5%8F%91%E6%88%AA%E5%9B%BE.png" srcset="/img/loading_1.gif" lazyload alt="部分代码截图"></p><p>不知不觉已经写了这么多的物品</p><p><img src="/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20241017112610.png" srcset="/img/loading_1.gif" lazyload alt="写了好多物品啊"></p><hr><hr><p>其实个人博客在一年前的暑假就打算自己开发了，只不过之前不太会这些，加上博客的搭建涉及到JSP，JS，CSS，等运用，那时候还不太熟练，最近也算是有这个模组开发当契机吧，试着自己做博客。</p><p>另外值得一提的是，本博客的开发运用的是<a href="https://hexo.io/">Hexo</a>所集成的生成和部署功能，这是很方便的，<strong>这可以让我在网页开发中省去很多时间来设计网页</strong>，但缺点是我不能很深入的了解网页开发的一些知识。但我相信在后续的博客搭建过程中肯定少不了我的自定义网页，届时我也会通过该博客的搭建和一些文章的发布来了解网页开发的更多知识。</p><p>关于该博客的主题使用的是<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>主题，在<a href="https://hexo.io/">Hexo</a>中可以找到，你如果也想搭建自己的个人博客不妨可以去试试运用<a href="https://hexo.io/">Hexo</a>来属于自己的个人博客，当然你如果不想用也可以纯手搓html来开发自己的博客网站。</p><p>关于<a href="https://hgt12.github.io/">云梦泽的个人博客</a>的一些其他功能，例如评论，友链等，云梦泽本人也在快马加鞭得学习中，虽然有一些数据库与前后端链接的基础，但实际运用起开开发还是对我来说太陌生了，以前也没有正真运用过，现在也是处于一个边学习边做的状态，大家可以好好期待一下我的后续开发。</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>文章</tag>
      
      <tag>云梦泽</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
